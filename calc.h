/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _CALC_H_RPCGEN
#define _CALC_H_RPCGEN

#include <rpc/rpc.h>

#include <pthread.h>

#ifdef __cplusplus
extern "C" {
#endif


struct getval {
	int res;
	char *val1;
	int val2;
	float val3;
};
typedef struct getval getval;

struct set_value_1_argument {
	char *key;
	char *val1;
	int val2;
	float val3;
};
typedef struct set_value_1_argument set_value_1_argument;

struct modify_value_1_argument {
	char *key;
	char *val1;
	int val2;
	float val3;
};
typedef struct modify_value_1_argument modify_value_1_argument;

#define COM 99
#define COMVER 1

#if defined(__STDC__) || defined(__cplusplus)
#define innit 1
extern  enum clnt_stat innit_1(int *, CLIENT *);
extern  bool_t innit_1_svc(int *, struct svc_req *);
#define set_value 2
extern  enum clnt_stat set_value_1(char *, char *, int , float , int *, CLIENT *);
extern  bool_t set_value_1_svc(char *, char *, int , float , int *, struct svc_req *);
#define get_value 3
extern  enum clnt_stat get_value_1(char *, getval *, CLIENT *);
extern  bool_t get_value_1_svc(char *, getval *, struct svc_req *);
#define modify_value 4
extern  enum clnt_stat modify_value_1(char *, char *, int , float , int *, CLIENT *);
extern  bool_t modify_value_1_svc(char *, char *, int , float , int *, struct svc_req *);
#define delete_key 5
extern  enum clnt_stat delete_key_1(char *, int *, CLIENT *);
extern  bool_t delete_key_1_svc(char *, int *, struct svc_req *);
#define exist 6
extern  enum clnt_stat exist_1(char *, int *, CLIENT *);
extern  bool_t exist_1_svc(char *, int *, struct svc_req *);
#define num_items 7
extern  enum clnt_stat num_items_1(int *, CLIENT *);
extern  bool_t num_items_1_svc(int *, struct svc_req *);
extern int com_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define innit 1
extern  enum clnt_stat innit_1();
extern  bool_t innit_1_svc();
#define set_value 2
extern  enum clnt_stat set_value_1();
extern  bool_t set_value_1_svc();
#define get_value 3
extern  enum clnt_stat get_value_1();
extern  bool_t get_value_1_svc();
#define modify_value 4
extern  enum clnt_stat modify_value_1();
extern  bool_t modify_value_1_svc();
#define delete_key 5
extern  enum clnt_stat delete_key_1();
extern  bool_t delete_key_1_svc();
#define exist 6
extern  enum clnt_stat exist_1();
extern  bool_t exist_1_svc();
#define num_items 7
extern  enum clnt_stat num_items_1();
extern  bool_t num_items_1_svc();
extern int com_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_getval (XDR *, getval*);
extern  bool_t xdr_set_value_1_argument (XDR *, set_value_1_argument*);
extern  bool_t xdr_modify_value_1_argument (XDR *, modify_value_1_argument*);

#else /* K&R C */
extern bool_t xdr_getval ();
extern bool_t xdr_set_value_1_argument ();
extern bool_t xdr_modify_value_1_argument ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_CALC_H_RPCGEN */
